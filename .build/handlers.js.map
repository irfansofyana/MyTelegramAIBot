{
  "version": 3,
  "sources": ["../handlers.ts"],
  "sourcesContent": ["import { Scenes } from 'telegraf';\nimport { message } from 'telegraf/filters';\nimport { AIService } from './service';\n\nconst service = new AIService();\n\nexport const tldr = new Scenes.BaseScene('tldr');\ntldr.enter(ctx => ctx.reply('Please give me the text boss'));\ntldr.on(message('text'), async ctx => {\n  const textInput = ctx.message.text;\n  try {\n    ctx.reply('Hang on boss.. this might take a while.');\n    const response = await service.tldr(textInput);\n    ctx.reply(response);\n    return ctx.scene.leave();\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n});\n\nexport const ama = new Scenes.BaseScene('ama');\nama.enter(ctx => ctx.reply('Give me your question boss, I would like to help!'));\nama.on(message('text'), async ctx => {\n  const question = ctx.message.text;\n  try {\n    ctx.reply('Hang on boss.. this might take a while.');\n    const response = await service.ama(question);\n    ctx.reply(response);\n    return ctx.scene.leave();\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n});\n\nexport const writeCode = new Scenes.BaseScene('writecode');\nwriteCode.enter(ctx => ctx.reply(`Give me your question boss!\\nNote: Check https://platform.openai.com/docs/guides/code to maximize the use of me on this.`));\nwriteCode.on(message('text'), async ctx => {\n  const instruction = ctx.message.text;\n  try {\n    ctx.reply('Hang on boss.. this might take a while.');\n    const response = await service.writeCode(instruction);\n    ctx.reply(response);\n    return ctx.scene.leave();\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n});\n\nexport const explainCode = new Scenes.BaseScene('explaincode');\nexplainCode.enter(ctx => ctx.reply(`Give me that hard code boss, I would like to help explain it!\\nNote: Check https://platform.openai.com/docs/guides/code to maximize the use of me on this.`));\nexplainCode.on(message('text'), async ctx => {\n  const codes = ctx.message.text;\n  try {\n    ctx.reply('Hang on boss.. this might take a while.');\n    const response = await service.explainCode(codes);\n    ctx.reply(response);\n    return ctx.scene.leave();\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n});\n\nexport const brainstorm = new Scenes.BaseScene('brainstorm');\nbrainstorm.enter(ctx => ctx.reply(`what is it that you want me to brainstorm?`));\nbrainstorm.on(message('text'), async ctx => {\n  const topic = ctx.message.text;\n  try {\n    ctx.reply('Hang on boss.. this might take a while.');\n    const response = await service.brainstorm(topic);\n    ctx.reply(response);\n    return ctx.scene.leave();\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n});\n\nexport const chat = async (ctx: any) => {\n  const text = ctx.message.text;\n  try {\n    const response = await service.chat(text);\n    ctx.reply(response);\n  } catch (err) {\n    console.error(err);\n    ctx.reply('Oopss.. there something wrong boss, please try again later!');\n  }\n}"],
  "mappings": "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",
  "names": []
}
